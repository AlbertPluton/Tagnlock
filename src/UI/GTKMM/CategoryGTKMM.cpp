//
//	Author: A.L. Hertog
//	Date: 24 June 2009
//	License: GPL
//
//

#include "CategoryGTKMM.h"

#include <iostream>

//-----------------------------------------------------------------------------

CategoryGTKMM::CategoryGTKMM()
{

#ifdef DEBUG_MESSAGES_DEF
	cout << "Constructing CategoryGTKMM	object.\n";
#endif

	objectData = NULL;

	this->set_homogeneous(false);
	this->show();
	this->set_child_visible();	

};

//-----------------------------------------------------------------------------

CategoryGTKMM::~CategoryGTKMM()
{
#ifdef DEBUG_MESSAGES_DEF
	cout << "Destroyed a CategoryGTKMM object.\n";
#endif
};

//-----------------------------------------------------------------------------

void CategoryGTKMM::addField( Gtk::Widget* field )
{
	this->pack_start( *field,	false, false, 2 );
};

//-----------------------------------------------------------------------------

void CategoryGTKMM::deleteField( int index )
{

#ifdef TODO_DEF
#warning TODO in file __FILE__ at line __LINE__.
#endif

};

//-----------------------------------------------------------------------------

void CategoryGTKMM::makeNewTable( Category* category )
{

	FieldGTKMM* fieldGTKMM = NULL;
	int size = category->getFieldsSize();
	Field* field = NULL;
	
	// Disconnect excisting signals
	for( int i = 0; i < connections.size(); i++ )
	{
		connections[i].disconnect();
	};	
	connections.clear();

	
	for( int i = 0; i < size; i++ )
	{
		field = category->getFieldAt( i );
		fieldGTKMM = new FieldGTKMM( field, objectData->getDataAt(i), i );
		
	
		this->addField( (Gtk::Widget*)fieldGTKMM );
		
		// Create the connection the the childs signal and add the connection to the vector.
//		connections.push_back( (fieldGTKMM->get_signal_selected()).connect( sigc::mem_fun(this, &CategoryGTKMM::fieldSelected) ) );
	}
	
	this->show_all();
	
};

//-----------------------------------------------------------------------------

void CategoryGTKMM::makeNewTable( ObjectData* object )
{
#ifdef TODO_DEF
#warning TODO in file __FILE__ at line __LINE__.
#endif
};

//-----------------------------------------------------------------------------

void CategoryGTKMM::fillTable( ObjectData* object )
{
#ifdef TODO_DEF
#warning TODO in file __FILE__ at line __LINE__.
#endif
};



//-----------------------------------------------------------------------------


void CategoryGTKMM::clear(  )
{
#ifdef TODO_DEF
#warning TODO in file __FILE__ at line __LINE__.
#endif
};

//-----------------------------------------------------------------------------

void CategoryGTKMM::fieldSelected( int fieldIndex )
{
	// Pass the signal generated by the Field on to the EngineGTKMM.
	signal_selectionChange.emit( fieldIndex );
};

//-----------------------------------------------------------------------------

CategoryGTKMM::type_signal_selectionChange CategoryGTKMM::get_signal_selectionChange( void )
{
	return signal_selectionChange;
};

//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------

